[include fluidd.cfg]
[include mainsail.cfg]
[include tones_Picobilical.cfg]
[include config_backup.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[exclude_object]
# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.
#[include sample-bigtreetech-ebb-canbus-v1.0.cfg]
## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Probe pin								[probe] section
## Fine tune E steps					[extruder] section

[include stealthburner_leds.cfg]
#[include lcd_tweaks.cfg]
[include nozzle_scrub.cfg]
##--------------------------------------------------------------------
# This file contains all settings for KAMP, and must be included in printer.cfg with:
[include KAMP_Settings.cfg]
### The following [includes] can be uncommented from within KAMP_Settings.cfg. ###
# This file enables the use of adaptive meshing.
[include ./KAMP/Adaptive_Meshing.cfg]
# This file enables the use of adaptive line purging.
[include ./KAMP/Line_Purge.cfg]
# This file enables the use of the adaptive Voron logo purge.
[include ./KAMP/Voron_Purge.cfg]
# This file enables the use of KAMP's Smart Park feature.
[include ./KAMP/Smart_Park.cfg]

##--------------------------------------------------------------------
[mcu]
canbus_uuid: 42d2211ee957
#restart_method: command
##--------------------------------------------------------------------

[mcu EBBCan]
canbus_uuid: 174e063f17d6

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0
#serial_number: VT.1223

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345


#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan:PB6
#endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
##--------------------------------------------------------------------
##	Uncomment for 300mm build
position_endstop: 300
position_max: 300
##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
#diag_pin: ^PG6 # use the same pin that was previously the endstop_pin!
#driver_SGTHRS: 90

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
#endstop_pin: tmc2209_stepper_x:virtual_endstop
##--------------------------------------------------------------------
##	Uncomment for 300mm build
position_endstop: 306
position_max: 306
##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
#diag_pin: ^PG9 # use the same pin that was previously the endstop_pin!
#driver_SGTHRS: 255
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front left  on MOTOR3
[stepper_z]
##step_pin: PF9
##dir_pin: PF10
##enable_pin: !PG2
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
rotation_distance: 4
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------
##	Uncomment below for 300mm build
position_max: 250
##--------------------------------------------------------------------
position_min: -2.5
homing_speed: 4
second_homing_speed: 3
homing_retract_dist: 3
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PF2
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Center on MOTOR4
[stepper_z1]
#step_pin: PG4
#dir_pin: PC1
#enable_pin: !PA0
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 4
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on MOTOR5
[stepper_z2]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
rotation_distance: 4
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PE4
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0




#####################################################################
# 	Extruder
#####################################################################

#	E0 on MOTOR6
[extruder]
step_pin: EBBCan:PD0
dir_pin: EBBCan:PD1
enable_pin: !EBBCan:PD2
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511	#Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 50:10				#BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBBCan:PB13
sensor_pin: EBBCan:PA3
##	Validate the following thermistor type to make sure it is correct
sensor_type: EPCOS 100K B57560G104F
min_temp: 10
max_temp: 320
max_power: 1.0
min_extrude_temp: 170
#The default is 4.0 * nozzle_diameter^2 then it is 0.640mm^2for a 0.4 nozzle
max_extrude_cross_section: 5.0 # 0.65
control = pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: EBBCan:PA15
interpolate: false
run_current: 0.65
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA3
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769


[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling

# Select the probe port by type:
## For the PROBE port; use this with the original OMRON sensor.
pin: EBBCan:PC13
## For the spare endstop port; use this with the Fotek PL-05N (or generic) inductive probe
# pin: ^PG11
## For Octopus Pro Probe port; NPN and PNP proximity switch types can be set by jumper
# pin: ^PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

#  activate_gcode:
#     {% set PROBE_TEMP = 150 %}
#     {% set MAX_TEMP = PROBE_TEMP + 5 %}
#     {% set ACTUAL_TEMP = printer.extruder.temperature %}
#     {% set TARGET_TEMP = printer.extruder.target %}
# 
#     {% if TARGET_TEMP > PROBE_TEMP %}
#         { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#         M109 S{ PROBE_TEMP }
#     {% else %}
#         # Temperature target is already low enough, but nozzle may still be too hot.
#         {% if ACTUAL_TEMP > MAX_TEMP %}
#             { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#             TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#         {% endif %}
#     {% endif %}

[filament_switch_sensor CW2_filament_sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: EBBCan:PB8
#   The pin on which the switch is connected. This parameter must be
#   provided.


#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: EBBCan: PA1
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan  
pin: EBBCan: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

#[heater_fan controller_fan]
##	Controller fan - CNC_FAN2
##pin: PD12
##kick_start_time: 0.5
##heater: heater_bed
##heater_temp: 45.0

#[heater_fan exhaust_fan]
##	Exhaust fan - CNC_FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#[temperature_sensor chamber]


[temperature_fan chamber]
pin: PD12
max_power: 0.6
shutdown_speed: 0.0
kick_start_time: 5.0
cycle_time:0.01
off_below:0.1
sensor_type: Generic 3950
sensor_pin: PF7
min_temp: 0
max_temp: 70
gcode_id: C
#min_temp: 0
#max_temp: 70
target_temp: 50.0
#heater_temp: 45.0
control: watermark
#gcode_id: C
#heater: chamber

[heater_fan  electronic_bay01]
pin: PA8
max_power: 0.5
shutdown_speed: 0.0
kick_start_time: 5.0
cycle_time:0.01
off_below:0.1
heater: extruder
#min_temp: 0
#max_temp: 110
heater_temp: 45.0

[heater_fan  electronic_bay02]
pin: PE5
max_power: 0.5
shutdown_speed: 0.0
kick_start_time: 5.0
cycle_time:0.01
off_below:0.1
heater: extruder
#min_temp: 0
#max_temp: 110
heater_temp: 45.0

[nevermore]
# BOM specifies a 16 pixel ring.
# If you don't have LEDs, you can omit the two `led_*` lines entirely
bt_address: 28:CD:C1:0C:E2:9D
fan_power_automatic: 0.5
fan_power_coefficient: 0.5
#led_colour_order: GBR
#led_chain_count: 16
connection_initial_timeout: 0
# Optional
# This 'temperature' sensor only serves to draw the intake VOC index on
# Mainsail's temperature plot.
[temperature_sensor nevermore_intake_VOC]
sensor_type: NevermoreSensor
sensor_kind: intake
plot_voc: true


#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PA3
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#[neopixel hotend_rgb]
#pin: EBBCan:PD3

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:150,150
speed:100
z_hop:5

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead


## Uncomment below for 300mm build
z_positions:
   -50, 18
   150, 348
   350, 18
points:
   10, 10
   150, 290
   280, 10


##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075


########################################
# BED MESH
########################################


[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------

##	Uncomment for 300mm build
mesh_min: 40, 40
mesh_max: 260,260

##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
#relative_reference_index: 12 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)
zero_reference_position: 150, 150
########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------


## Funguje 
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2
[output_pin beeper]
pin: EXP1_1
value: 0
shutdown_value: 0
pwm: True
cycle_time: 0.0005 ; Default beeper tone in kHz. 1 / 0.0005 = 2000Hz (2kHz)

[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
color_order: BGR
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    Z_TILT_ADJUST
    G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
    G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
   
#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position
  SET_FAN_SPEED FAN=nevermore_fan SPEED=0.1
  M109 S250 
  clean_nozzle
  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  M104 S150
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  #SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  #STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  #quad_gantry_level               # Levels the buildplate via QGL
  #G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  bed_mesh_calibrate                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position


[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    Song_Simpsons
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro LOAD_FILAMENT]
gcode:
    M117 Loading Filament...
    G92 E0.0
    G91
    G1 E40 F400
    G1 E30 F400
    G1 E25 F200
    G90
    G92 E0.0
    M400
    M117 Load Complete
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro UNLOAD_FILAMENT]
gcode:
    M117 Unloading Filament...
    G92 E0.0
    G91
    G1 E10 F300
   #  G1 E-45 F5200
   #  G1 E-15 F1000
   #  G1 E-20 F1000
    G1 E-40 F3000                  ; jerk the filament out of the melt zone
    G1 E-50 F1800                  ; retract the rest of the way
    G1 E-25 F900                   ; retract the rest of the way
    G90
    G92 E0.0
    M400
    M117 Remove Filament Now!
    M300 S300 P1000
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro M141]
gcode:
    {% set s = params.S|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={s}

[gcode_macro WLED_ON]
description: Turn WLED strip on using optional preset and resets led colors
gcode:
  {% set strip = params.STRIP|default("chamber")|string %}
  {% set preset = params.PRESET|default(4)|int %}

  {action_call_remote_method("set_wled_state",
                             strip=strip,
                             state=True,
                             preset=preset)}

[gcode_macro heating_led]
gcode:
  WLED_ON STRIP=chamber PRESET=1

[gcode_macro mesh_led]
gcode:
  WLED_ON STRIP=chamber PRESET=2

[gcode_macro off_led]
gcode:
  WLED_ON STRIP=chamber PRESET=3

[gcode_macro on_led]
gcode:
  WLED_ON STRIP=chamber PRESET=4

[gcode_macro qgl_led]
gcode:
  WLED_ON STRIP=chamber PRESET=5

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.970
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 35.2
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 39.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.025625, 0.035000, 0.023750, 0.038125, 0.042500
#*# 	  0.008125, 0.013125, 0.009375, 0.044375, 0.056250
#*# 	  -0.033125, -0.025625, 0.000000, 0.040625, 0.054375
#*# 	  -0.074375, -0.040625, -0.006875, 0.047500, 0.083750
#*# 	  -0.103125, -0.042500, -0.001875, 0.057500, 0.086875
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 260.0
#*# min_y = 40.0
#*# max_y = 260.0
